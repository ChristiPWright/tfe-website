<?xml version="1.0" encoding="UTF-8"?>

<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

   

    <service verb="get" noun="CategoryProducts">
        <in-parameters>
            
            <parameter name="orderBy" default-value="sequenceNum"/>
            <parameter name="pageIndex" default="0"/>
            <parameter name="pageSize" default="100"/>
        </in-parameters>
        <out-parameters>
            <parameter name="productList" type="List"><parameter name="productInfo" type="Map">
                <parameter name="productId"/><parameter name="pseudoId"/><parameter name="productName"/><parameter name="description"/>
                <parameter name="price" type="BigDecimal"/><parameter name="listPrice" type="BigDecimal"/><parameter name="priceUomId"/>
                <parameter name="sequenceNum" type="Long"/>
                <parameter name="smallImageInfo" type="Map"/><parameter name="mediumImageInfo" type="Map"/>
            </parameter></parameter>
            <parameter name="productList" type="List"><parameter name="document" type="Map"/></parameter>
            <parameter name="productListCount" type="Integer"><description>The total count of hits, not just the
                limited number returned.</description></parameter>
            <parameter name="productListPageIndex" type="Integer"/>
            <parameter name="productListPageSize" type="Integer"/>
            <parameter name="productListPageMaxIndex" type="Integer"/>
            <parameter name="productListPageRangeLow" type="Integer"/>
            <parameter name="productListPageRangeHigh" type="Integer"/>
        </out-parameters>
        <actions>
            <service-call name="tfe-website.CartServices.get#ActiveOrderAndCustomer" out-map="context"/>
            <if condition="productStoreId">
                <entity-find-one entity-name="mantle.product.store.ProductStore" value-field="productStore" cache="true"/>
                <if condition="!priceUomId"><set field="priceUomId" from="productStore?.defaultCurrencyUomId"/></if>
                <set field="vendorPartyId" from="productStore?.organizationPartyId"/>
            </if>

            <!-- get entire cached list then paginate, for huge numbers of products in a category this is a bad approach (such sites should probably be purely search based) -->
            <!-- use the name 'productList' so pagination out-parameters are created automatically -->
            <entity-find entity-name="mantle.product.category.ProductCategoryMember" list="productList" cache="true">
                <search-form-inputs default-order-by="${orderBy}"/>
                <date-filter/><econdition field-name="productCategoryId" value="PAINTING"/>
            </entity-find>
            <set field="pcmList" from="productList"/>

            <set field="productList" from="[]"/>
            <iterate list="pcmList" entry="pcmp">
                <entity-find-one entity-name="mantle.product.Product" value-field="product" cache="true">
                    <field-map field-name="productId" from="pcmp.productId"/></entity-find-one>

                <service-call name="mantle.product.PriceServices.get#ProductPrice" out-map="priceMap" out-map-add-to-existing="false"
                        in-map="[productId:pcmp.productId, priceUomId:priceUomId, productStoreId:productStoreId,
                                vendorPartyId:vendorPartyId, customerPartyId:customerPartyId]"/>

                <set field="smallImageInfo" from="null"/>
                <set field="mediumImageInfo" from="null"/>
                <entity-find entity-name="mantle.product.ProductContent" list="productContentList" cache="true">
                    <date-filter/><econdition field-name="productId" from="pcmp.productId"/>
                    <order-by field-name="sequenceNum,-fromDate"/>
                </entity-find>
                <if condition="locale">
                    <!-- filter after by locale to streamline cached find -->
                    <set field="langLocale" from="locale.contains('_') ? locale.substring(locale.indexOf('_')) : null"/>
                    <set field="productContentList" from="productContentList.findAll({ it.locale == null || it.locale == locale || it.locale == langLocale })"/>
                </if>
                <if condition="productContentList">
                    <!-- medium can be PcntImageMedium or PcntImageLarge -->
                    <set field="mediumImageInfo" from="productContentList.find({ 'PcntImageMedium'.equals(it.productContentTypeEnumId) })"/>
                    <if condition="mediumImageInfo == null">
                        <set field="mediumImageInfo" from="productContentList.find({ 'PcntImageLarge'.equals(it.productContentTypeEnumId) })"/></if>
                    <!-- small can be PcntImageSmall or from medium we just looked up -->
                    <set field="smallImageInfo" from="productContentList.find({ 'PcntImageSmall'.equals(it.productContentTypeEnumId) })"/>
                    <if condition="smallImageInfo == null"><set field="smallImageInfo" from="mediumImageInfo"/></if>
                </if>
                
                <!-- Below script needed to render the section.... What would be another way to achieve this? -->
                <script>productList.add([productId:pcmp.productId, pseudoId:product.pseudoId, productName:product.productName,
                        description:product.description, price:priceMap.price, listPrice:priceMap.listPrice, priceUomId:priceMap.priceUomId,
                        sequenceNum:pcmp.sequenceNum, smallImageInfo:smallImageInfo, mediumImageInfo:mediumImageInfo])</script>
            </iterate>
        </actions>
    </service>

    

    
</services>