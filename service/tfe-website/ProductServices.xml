<?xml version="1.0" encoding="UTF-8"?>

<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">
    <service verb="get" noun="CategoryProducts">
        <in-parameters>
            <parameter name="productCategoryId" required="true"/>
        </in-parameters>

        <out-parameters>
            <parameter name="productList" type="List">
                <parameter name="productInfo" type="Map">
                    <parameter name="productId"/>
                    <parameter name="productId"/>
                    <parameter name="pseudoId"/>
                    <parameter name="productName"/>
                    <parameter name="description"/>
                    <parameter name="price" type="BigDecimal"/>
                    <parameter name="priceUomId"/>
                    <parameter name="smallImageInfo" type="Map"/>
                    <parameter name="mediumImageInfo" type="Map"/>
                </parameter>
            </parameter>
        </out-parameters>

        <actions>
            <!-- Get all products in the category -->
            <!-- use the name 'productList' so pagination out-parameters are created automatically -->
            <entity-find entity-name="mantle.product.category.ProductCategoryMember" list="productList" cache="true">
                <econdition field-name="productCategoryId" from="productCategoryId" />
            </entity-find>
            <set field="pcmList" from="productList"/>

            <!-- Array to catch out variables from below iterating loop -->
            <set field="productList" from="[]"/>
            
            <!-- For Loop -->
            <!-- Find entity & all associated entities. Get Product, Price, Content -->
            <iterate list="pcmList" entry="pcmp">
                <!-- In each iteration Gets individual product entity -->
                <entity-find-one entity-name="mantle.product.Product" value-field="product" cache="true">
                    <field-map field-name="productId" from="pcmp.productId"/></entity-find-one>

                <!-- Uses indiv defined product to access imag content image based on productContentTypeEnumID -->
                <set field="smallImageInfo" from="null"/>
                <set field="mediumImageInfo" from="null"/>
                <entity-find entity-name="mantle.product.ProductContent" list="productContentList" cache="true">
                    <econdition field-name="productId" from="pcmp.productId"/>
                </entity-find>

                <!-- Finds all content in the local language -->
                <if condition="locale">
                    <!-- filter after by locale to streamline cached find -->
                    <set field="langLocale" from="locale.contains('_') ? locale.substring(locale.indexOf('_')) : null"/>
                    <set field="productContentList" from="productContentList.findAll({ it.locale == null || it.locale == locale || it.locale == langLocale })"/>
                </if>
                <if condition="productContentList">
                    <!-- medium can be PcntImageMedium or PcntImageLarge -->
                    <set field="mediumImageInfo" from="productContentList.find({ 'PcntImageMedium'.equals(it.productContentTypeEnumId) })"/>
                    <if condition="mediumImageInfo == null">
                        <set field="mediumImageInfo" from="productContentList.find({ 'PcntImageLarge'.equals(it.productContentTypeEnumId) })"/></if>
                    <!-- small can be PcntImageSmall or from medium we just looked up -->
                    <set field="smallImageInfo" from="productContentList.find({ 'PcntImageSmall'.equals(it.productContentTypeEnumId) })"/>
                    <if condition="smallImageInfo == null"><set field="smallImageInfo" from="mediumImageInfo"/></if>
                </if>
                <script>productList.add([productId:pcmp.productId,pseudoId:product.pseudoId,productName:product.productName, description:product.description, price:product.prices.price[0],priceUomId:product.prices.priceUomId[0],smallImageInfo:smallImageInfo, mediumImageInfo:mediumImageInfo])</script>
            </iterate>
            <log message="tfe-website::::productList-----------------------${productList}--------------------------------------" />
        </actions>
    </service>

    <service verb="get" noun="ProductInfo">
        <in-parameters>
            <parameter name="productId" required="true"/>
            <parameter name="priceUomId"/>
            <parameter name="locale" default="ec.user.locale?.toString()"/>
        </in-parameters>
        <out-parameters>
            <auto-parameters entity-name="mantle.product.Product" include="nonpk"/>

            <parameter name="price" type="BigDecimal"/>
            <parameter name="listPrice" type="BigDecimal"/>
            <parameter name="priceUomId"/>
            <parameter name="productId"/>

            <parameter name="productClassDescription"/>
            <parameter name="descriptionLong"/>
            <parameter name="descriptionSmall"/>
            <parameter name="contentList" type="List">
                <parameter name="content" type="Map">
                    <parameter name="productContentId"/>
                    <parameter name="productContentTypeEnumId"/>
                    <parameter name="productContentLocation"/>
                    <parameter name="description"/>
                    <parameter name="sequenceNum"/>
                </parameter>
            </parameter>
            <parameter name="productRating"/>

            <parameter name="standardFeatureList" type="List">
                <parameter name="dimension" type="Map"/>
            </parameter>
            <parameter name="dimensionList" type="List"><parameter name="dimension" type="Map"/></parameter>
        </out-parameters>
        <actions>
            <entity-find-one entity-name="mantle.product.Product" value-field="product"/>
            <if condition="product == null"><return error="true" message="Product not found with ID ${productId}"/></if>
            <script>context.putAll(product)</script>

            
            
            <set field="price" from="product.prices.price"/>
            <set field="priceUomId" from="product.prices.priceUomId"/>

            <entity-find-one entity-name="moqui.basic.Enumeration" value-field="productClassEnum">
                <field-map field-name="enumId" from="product.productClassEnumId"/></entity-find-one>
            <set field="productClassDescription" from="productClassEnum?.description"/>

            <entity-find entity-name="mantle.product.feature.ProductFeatureAndAppl" list="standardFeatureList" cache="true">
                <date-filter/><econdition field-name="productId"/>
                <econdition field-name="applTypeEnumId" value="PfatStandard"/>
                <order-by field-name="productFeatureTypeEnumId"/><order-by field-name="description"/>
            </entity-find>

            <entity-find entity-name="mantle.product.ProductDimensionAndType" list="dimensionList" cache="true">
                <econdition field-name="productId"/><order-by field-name="description"/></entity-find>

            <entity-find entity-name="mantle.product.ProductContent" list="contentList" cache="true">
                <date-filter/><econdition field-name="productId"/>
                <order-by field-name="sequenceNum,-fromDate"/>
            </entity-find>

             
            <!-- some content types may have more than one record, long description just has one -->
            <set field="descLongLocation" from="contentList.find({ 'PcntDescriptionLong' == it.productContentTypeEnumId })?.contentLocation"/>
            <if condition="descLongLocation"><set field="descriptionLong" from="ec.resource.getLocationText(descLongLocation, true)"/></if>

            <set field="descSmallLocation" from="contentList.find({ 'PcntDescription' == it.productContentTypeEnumId })?.contentLocation"/>
            <if condition="descSmallLocation"><set field="descriptionSmall" from="ec.resource.getLocationText(descSmallLocation, true)"/></if>
            <!-- <set field="imageSmallList" from="contentList.findAll({ 'PcntImageSmall' == it.productContentTypeEnumId })"/> -->

            <log message="ProductService/ProductInfo::::price-----------------------${price}--------------------------------------" />
        </actions>
    </service>
</services>